#include<cstdio>
#include<vector>
using namespace std;
int main(){
	vector<int> vi;
	for(int i=1;i<=3;i++){
		vi.push_back(i);//将1,2,3依次插入vi末尾 。 
	}
	for(int i=0;i<vi.size();i++){
		printf("%d ",vi[i]);
	}
	printf("%d ",vi.size()); 
	vi.pop_back();//删除vi的尾元素3 
	for(int i=0;i<vi.size();i++){
		printf("%d ",vi[i]);		 
	}
	printf("%d ",vi.size());
	//vi.clear();清空 vector中的所有元素 
	return 0;
}
//push_back（x）在vector末尾添加一个元素，时间复杂度O（1） 
//pop_back （）删除vector末尾的一个元素，时间复杂度为O（1）
 
 
 -------------------------------------------------------------------------------------------------------
 #include<cstdio>
#include<vector>
using namespace std;
int main(){
	vector<int> vi;
	for(int i=1;i<=5;i++){
		vi.push_back(i);//1,2,3,4,5
    }
    vi.insert(vi.begin()+2,-1);
    for(int i=0;i<vi.size();i++){
    	printf("%d ",vi[i]);//1.2.-1.3.4.5
	}
	vi.erase(vi.begin()+2);
	for(int i=0;i<vi.size();i++){
    	printf("%d ",vi[i]);//1.2.3.4.5
	}
	vi.erase(vi.begin()+1,vi.begin()+3);//删除vi[1],vi[2]   [1,3) 
	for(int i=0;i<vi.size();i++){
    	printf("%d ",vi[i]);//1.4.5
	}
	return 0;
} 
//end()所指地址为尾元素地址的下一个地址（哨兵地址）
//更方便的清空vector的方法是使用vi.clear()
// 在常用的STL容器中，只有在vector和string中，才允许使用vi.begin()+2这种迭代器加上整数的写法
//vector<int>::iterator it = vi.begin();
//for(int i=0;i<5;i++){
//	printf("%d ",*(it+i));
//	//*(it+i)等价于vi[i] 
//}
